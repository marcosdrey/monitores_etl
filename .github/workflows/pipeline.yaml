name: Pipeline
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      RAW_DATA_PATH: ${{ secrets.RAW_DATA_PATH }}
      TEST_RAW_DATA_PATH: ${{ secrets.TEST_RAW_DATA_PATH }}

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar o python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'


      - name: Instalar Poetry
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry

      - name: Instalar dependências do projeto
        run: poetry install

      - name: Rodar testes unitários
        run: |
          poetry run task test

      - name: Build da imagem Docker
        run: docker build -t monitores-etl .

      - name: Testar ETL (extract + transform)
        run: |
          docker compose run --rm monitores extract
          docker compose run --rm monitores transform

      - name: Testar Streamlit dashboard (Smoke test)
        run: |
          docker compose run --rm -p 8501:8501 monitores dashboard &
          sleep 15
          curl -f http://localhost:8501 || (echo "Dashboard falhou!" && exit 1)